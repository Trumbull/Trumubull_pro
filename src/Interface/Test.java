/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Zakaz_panels.Panel_vibor_rejs;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 10i
 */
public class Test extends javax.swing.JFrame {

    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();// определяем размер экрана
    JButton b2 = new JButton("Добавить нового клиента");
    private Container c = getContentPane();

    public Test() throws SQLException {
        panel_1();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setFocusable(false);
        setFocusableWindowState(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 361, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    new Test().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame jInternalFrame1;
    // End of variables declaration//GEN-END:variables

    public void panel_1() throws SQLException {
        JButton b1 = new JButton("Внести");;

        JButton b3 = new JButton("Отмена");
        JPanel panel = new JPanel();
        Map<Integer, String> codes = new HashMap<>();
        String url = "jdbc:mysql://localhost:3306/mydb", user = "root", password = "";
        try (Connection c = DriverManager.getConnection(url, user, password)) {
            c.setAutoCommit(false);
            c.setReadOnly(false);
            int shet = 0; //счетчик
            int id = 0;
            String imja[] = new String[500];
            String familiya[] = new String[500];
            String otchestvo[] = new String[500];
            String mili[] = new String[500];
            //String nomer_pasporta[] = new String[500];
            String data_rog[] = new String[500];
            int id_flag[] = new int[500]; // id стран
            try (PreparedStatement ps = c.prepareStatement("SELECT COUNT(*) FROM `klient`")) {
                try (ResultSet rs = ps.executeQuery()) {
                    if (rs.next()) {
                        id = rs.getInt("COUNT(*)");
                    }
                }
                ps.close();
            }
            try (PreparedStatement ps = c.prepareStatement("SELECT * FROM `strana`")) {
                try (ResultSet rs = ps.executeQuery()) {
                    while (rs.next()) {
                        int strana_id = rs.getInt("Strana_id");
                        String nazv = rs.getString("Nazvanie");

                        codes.put(strana_id, nazv);
                    }
                }
                ps.close();
            }

            //System.out.println("ID: " + id);
            try (PreparedStatement ps = c.prepareStatement("SELECT  * FROM `klient`")) {
                try (ResultSet rs = ps.executeQuery()) {
                    while (rs.next()) {
                        imja[shet] = rs.getString("Imja");
                        familiya[shet] = rs.getString("Familiya");
                        otchestvo[shet] = rs.getString("Otshestvo");
                        mili[shet] = rs.getString("Mili");
                        //nomer_pasporta[shet] = rs.getString("Nomer_pasporta");
                        data_rog[shet] = rs.getString("Data_rogdeniya");
                        id_flag[shet] = rs.getInt("Strana_id");
                        shet++;
                    }
                }
                ps.close();
            }

            JScrollPane scrollPane = new JScrollPane();
            int h = screenSize.height / 2 + 340; //высота скролла
            scrollPane.setBounds(0, 0, screenSize.width, h);
            //panel.setBounds(0, 0, screenSize.width, screenSize.height - 200);
            panel.setBounds(0, 0, screenSize.width, screenSize.height);
            //getContentPane().setLayout(new BorderLayout());
            getContentPane().add(panel);
            panel.setLayout(new BorderLayout());
            panel.add(scrollPane);
            b1.setBounds(0, h + 5, screenSize.width, 30);
            b2.setBounds(0, h + 5 + 30, screenSize.width, 30);
            b3.setBounds(0, h + 5 + 60, screenSize.width, 30);
            JButton b4 = new JButton("Бред");
            panel.add(b1);
            panel.add(b2);
            panel.add(b3);
            panel.add(b4);//заглушка
            b4.setVisible(false); // не мешала

            JTable table = new JTable();
            scrollPane.setViewportView(table);
            DefaultTableModel model = (DefaultTableModel) table.getModel();

            //table.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
            //setBounds(0, 0, screenSize.width, screenSize.height);
            //model.addColumn("id");
            model.addColumn("Фамилия");
            model.addColumn("Имя");
            model.addColumn("Отчество");
            model.addColumn("Дата рождения");
            model.addColumn("Мили");
            model.addColumn("Страна");

            //выравнивание таблицы
            DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
            DefaultTableCellRenderer leftRenderer = new DefaultTableCellRenderer();
            rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
            leftRenderer.setHorizontalAlignment(JLabel.LEFT);
            table.getColumnModel().getColumn(0).setCellRenderer(leftRenderer);
            table.getColumnModel().getColumn(1).setCellRenderer(leftRenderer);
            table.getColumnModel().getColumn(2).setCellRenderer(leftRenderer);
            table.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
            table.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
            for (int i = 0; i <= (id - 1); i++) {

                model.addRow(new Object[0]);
                //model.setValueAt(i + 1, i, 0);
                model.setValueAt(familiya[i], i, 0);
                model.setValueAt(imja[i], i, 1);
                model.setValueAt(otchestvo[i], i, 2);
                model.setValueAt(data_rog[i], i, 3);
                model.setValueAt(mili[i], i, 4);
                model.setValueAt(codes.get(id_flag[i]), i, 5);

            }

            c.commit();
            c.commit();
            c.close();
        } catch (SQLException se) {
        } catch (Exception e) {
        }
        b2.addActionListener((ActionEvent e) -> {
            //panel.setVisible(false);
            getContentPane().remove(panel);
            getContentPane().revalidate();
            getContentPane().repaint();
            try {
                getContentPane().add(new Panel_vibor_rejs());
                /*
                System.out.print("Нажата");
                JPanel panel1 = new JPanel();
                panel1.setBounds(0, 0, screenSize.width, screenSize.height);
                JButton b5 = new JButton("fsdf");
                panel1.add(b5);
                getContentPane().add(panel1);
                */
            } catch (SQLException ex) {
                Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
            }
        });

    }
}
